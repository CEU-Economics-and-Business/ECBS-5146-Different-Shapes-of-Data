I"IJ<blockquote class="discussion">
  <h2 id="table-of-content">Table of Content</h2>
  <p><a href="#setup">Session setup</a><br />
<a href="#dw">Creating the analytical data store</a><br />
<a href="#jobs">Events to schedule ETL jobs</a><br />
<a href="#etl">Trigger as ETL</a><br />
<a href="#datamart">Data marts with Views</a><br />
<a href="#security">Security with Views</a><br />
<a href="#homework">Term project</a></p>
</blockquote>

<p><br /><br />
<a name="setup"></a></p>
<h2 id="session-setup">Session setup</h2>

<p>No need to load new data, in this chapter we will use the same sample db we used in the last chapter:</p>

<p><img src="../artifacts/joins/sampledatabase_diagram.png" alt="Database diagram" /></p>

<p><br /><br /><br />
<a name="dw"></a></p>
<h2 id="creating-the-analytical-data-store">Creating the analytical data store</h2>

<p>We will use a query created in Homework 3. This creates a denormalized snapshot of the operational tables for product_sales subject. We will embed the creation in a stored procedure.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">DROP</span> <span class="k">PROCEDURE</span> <span class="n">IF</span> <span class="k">EXISTS</span> <span class="n">CreateProductSalesStore</span><span class="p">;</span>

<span class="k">DELIMITER</span> <span class="o">//</span>

<span class="k">CREATE</span> <span class="k">PROCEDURE</span> <span class="n">CreateProductSalesStore</span><span class="p">()</span>
<span class="k">BEGIN</span>

	<span class="k">DROP</span> <span class="k">TABLE</span> <span class="n">IF</span> <span class="k">EXISTS</span> <span class="n">product_sales</span><span class="p">;</span>

	<span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">product_sales</span> <span class="k">AS</span>
	<span class="k">SELECT</span> 
	   <span class="n">orders</span><span class="p">.</span><span class="n">orderNumber</span> <span class="k">AS</span> <span class="n">SalesId</span><span class="p">,</span> 
	   <span class="n">orderdetails</span><span class="p">.</span><span class="n">priceEach</span> <span class="k">AS</span> <span class="n">Price</span><span class="p">,</span> 
	   <span class="n">orderdetails</span><span class="p">.</span><span class="n">quantityOrdered</span> <span class="k">AS</span> <span class="n">Unit</span><span class="p">,</span>
	   <span class="n">products</span><span class="p">.</span><span class="n">productName</span> <span class="k">AS</span> <span class="n">Product</span><span class="p">,</span>
	   <span class="n">products</span><span class="p">.</span><span class="n">productLine</span> <span class="k">As</span> <span class="n">Brand</span><span class="p">,</span>   
	   <span class="n">customers</span><span class="p">.</span><span class="n">city</span> <span class="k">As</span> <span class="n">City</span><span class="p">,</span>
	   <span class="n">customers</span><span class="p">.</span><span class="n">country</span> <span class="k">As</span> <span class="n">Country</span><span class="p">,</span>   
	   <span class="n">orders</span><span class="p">.</span><span class="n">orderDate</span> <span class="k">AS</span> <span class="nb">Date</span><span class="p">,</span>
	   <span class="n">WEEK</span><span class="p">(</span><span class="n">orders</span><span class="p">.</span><span class="n">orderDate</span><span class="p">)</span> <span class="k">as</span> <span class="n">WeekOfYear</span>
	<span class="k">FROM</span>
		<span class="n">orders</span>
	<span class="k">INNER</span> <span class="k">JOIN</span>
		<span class="n">orderdetails</span> <span class="k">USING</span> <span class="p">(</span><span class="n">orderNumber</span><span class="p">)</span>
	<span class="k">INNER</span> <span class="k">JOIN</span>
		<span class="n">products</span> <span class="k">USING</span> <span class="p">(</span><span class="n">productCode</span><span class="p">)</span>
	<span class="k">INNER</span> <span class="k">JOIN</span>
		<span class="n">customers</span> <span class="k">USING</span> <span class="p">(</span><span class="n">customerNumber</span><span class="p">)</span>
	<span class="k">ORDER</span> <span class="k">BY</span> 
		<span class="n">orderNumber</span><span class="p">,</span> 
		<span class="n">orderLineNumber</span><span class="p">;</span>

<span class="k">END</span> <span class="o">//</span>
<span class="k">DELIMITER</span> <span class="p">;</span>


<span class="k">CALL</span> <span class="n">CreateProductSalesStore</span><span class="p">();</span>
</code></pre></div></div>

<p><br /><br /><br />
<a name="jobs"></a></p>
<h2 id="events-to-schedule-etl-jobs">Events to schedule ETL jobs</h2>

<p>Event engine runs scheduled jobs/tasks. We can us it for scheduling ETL processes.</p>

<p>Basics on how to check the state of the scheduler. Check if scheduler is running</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SHOW</span> <span class="n">VARIABLES</span> <span class="k">LIKE</span> <span class="nv">"event_scheduler"</span><span class="p">;</span>
</code></pre></div></div>

<p>Turn it on if not</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SET</span> <span class="k">GLOBAL</span> <span class="n">event_scheduler</span> <span class="o">=</span> <span class="k">ON</span><span class="p">;</span>
</code></pre></div></div>

<p>This is how you turn it OFF</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SET</span> <span class="k">GLOBAL</span> <span class="n">event_scheduler</span> <span class="o">=</span> <span class="k">OFF</span><span class="p">;</span>
</code></pre></div></div>

<p>Event which is calling CreateProductSalesStore every 1 minute in the next 1 hour.</p>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">DELIMITER</span> <span class="err">$$</span>

<span class="k">CREATE</span> <span class="n">EVENT</span> <span class="n">CreateProductSalesStoreEvent</span>
<span class="k">ON</span> <span class="n">SCHEDULE</span> <span class="k">EVERY</span> <span class="mi">1</span> <span class="k">MINUTE</span>
<span class="n">STARTS</span> <span class="k">CURRENT_TIMESTAMP</span>
<span class="n">ENDS</span> <span class="k">CURRENT_TIMESTAMP</span> <span class="o">+</span> <span class="n">INTERVAL</span> <span class="mi">1</span> <span class="n">HOUR</span>
<span class="k">DO</span>
	<span class="k">BEGIN</span>
		<span class="k">INSERT</span> <span class="k">INTO</span> <span class="n">messages</span> <span class="k">SELECT</span> <span class="n">CONCAT</span><span class="p">(</span><span class="s1">'event:'</span><span class="p">,</span><span class="n">NOW</span><span class="p">());</span>
    		<span class="k">CALL</span> <span class="n">CreateProductSalesStore</span><span class="p">();</span>
	<span class="k">END</span><span class="err">$$</span>
<span class="k">DELIMITER</span> <span class="p">;</span>
</code></pre></div></div>

<p>Listing all events stored in the schema</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SHOW</span> <span class="n">EVENTS</span><span class="p">;</span>
</code></pre></div></div>

<p>Deleting an event</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">DROP</span> <span class="n">EVENT</span> <span class="n">IF</span> <span class="k">EXISTS</span> <span class="n">CreateProductSalesStoreEvent</span><span class="p">;</span>
</code></pre></div></div>

<p><br /><br /><br />
<a name="etl"></a></p>
<h2 id="trigger-as-etl">Trigger as ETL</h2>

<p>Format:</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">DELIMITER</span> <span class="err">$$</span>

<span class="k">CREATE</span> <span class="k">TRIGGER</span> <span class="n">trigger_namex</span>
    <span class="k">AFTER</span> <span class="k">INSERT</span> <span class="k">ON</span> <span class="n">table_namex</span> <span class="k">FOR</span> <span class="k">EACH</span> <span class="k">ROW</span>
<span class="k">BEGIN</span>
    <span class="c1">-- statements</span>
    <span class="c1">-- NEW.orderNumber, NEW.productCode etc</span>
<span class="k">END</span><span class="err">$$</span>    

<span class="k">DELIMITER</span> <span class="p">;</span>
</code></pre></div></div>

<p><br /><br /></p>
<blockquote class="challenge">
  <h2 id="exercise1"><code class="language-plaintext highlighter-rouge">Exercise1</code></h2>
  <p>Copy the birdstrikes structure into a new tabe called birdstrikes2. Insert into birdstrikes2 the line where id is 10.
Hints:</p>
  <ul>
    <li>Use the samples from Chapter2 for copy</li>
    <li>For insert use the format like: INSERT INTO bla SELECT blabla</li>
  </ul>
</blockquote>

<p><br /><br /></p>

<p>Empty log table:</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">TRUNCATE</span> <span class="n">messages</span><span class="p">;</span>
</code></pre></div></div>

<p><br /><br /></p>
<h4 id="the-trigger">The trigger</h4>
<p>Creating a trigger which is activated if an insert is executed into orderdetails table. Once triggered will insert a new line in our previously created data store.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">DROP</span> <span class="k">TRIGGER</span> <span class="n">IF</span> <span class="k">EXISTS</span> <span class="n">after_order_insert</span><span class="p">;</span> 

<span class="k">DELIMITER</span> <span class="err">$$</span>

<span class="k">CREATE</span> <span class="k">TRIGGER</span> <span class="n">after_order_insert</span>
<span class="k">AFTER</span> <span class="k">INSERT</span>
<span class="k">ON</span> <span class="n">orderdetails</span> <span class="k">FOR</span> <span class="k">EACH</span> <span class="k">ROW</span>
<span class="k">BEGIN</span>
	
	<span class="c1">-- log the order number of the newley inserted order</span>
    	<span class="k">INSERT</span> <span class="k">INTO</span> <span class="n">messages</span> <span class="k">SELECT</span> <span class="n">CONCAT</span><span class="p">(</span><span class="s1">'new orderNumber: '</span><span class="p">,</span> <span class="k">NEW</span><span class="p">.</span><span class="n">orderNumber</span><span class="p">);</span>

	<span class="c1">-- archive the order and assosiated table entries to product_sales</span>
  	<span class="k">INSERT</span> <span class="k">INTO</span> <span class="n">product_sales</span>
	<span class="k">SELECT</span> 
	   <span class="n">orders</span><span class="p">.</span><span class="n">orderNumber</span> <span class="k">AS</span> <span class="n">SalesId</span><span class="p">,</span> 
	   <span class="n">orderdetails</span><span class="p">.</span><span class="n">priceEach</span> <span class="k">AS</span> <span class="n">Price</span><span class="p">,</span> 
	   <span class="n">orderdetails</span><span class="p">.</span><span class="n">quantityOrdered</span> <span class="k">AS</span> <span class="n">Unit</span><span class="p">,</span>
	   <span class="n">products</span><span class="p">.</span><span class="n">productName</span> <span class="k">AS</span> <span class="n">Product</span><span class="p">,</span>
	   <span class="n">products</span><span class="p">.</span><span class="n">productLine</span> <span class="k">As</span> <span class="n">Brand</span><span class="p">,</span>
	   <span class="n">customers</span><span class="p">.</span><span class="n">city</span> <span class="k">As</span> <span class="n">City</span><span class="p">,</span>
	   <span class="n">customers</span><span class="p">.</span><span class="n">country</span> <span class="k">As</span> <span class="n">Country</span><span class="p">,</span>   
	   <span class="n">orders</span><span class="p">.</span><span class="n">orderDate</span> <span class="k">AS</span> <span class="nb">Date</span><span class="p">,</span>
	   <span class="n">WEEK</span><span class="p">(</span><span class="n">orders</span><span class="p">.</span><span class="n">orderDate</span><span class="p">)</span> <span class="k">as</span> <span class="n">WeekOfYear</span>
	<span class="k">FROM</span>
		<span class="n">orders</span>
	<span class="k">INNER</span> <span class="k">JOIN</span>
		<span class="n">orderdetails</span> <span class="k">USING</span> <span class="p">(</span><span class="n">orderNumber</span><span class="p">)</span>
	<span class="k">INNER</span> <span class="k">JOIN</span>
		<span class="n">products</span> <span class="k">USING</span> <span class="p">(</span><span class="n">productCode</span><span class="p">)</span>
	<span class="k">INNER</span> <span class="k">JOIN</span>
		<span class="n">customers</span> <span class="k">USING</span> <span class="p">(</span><span class="n">customerNumber</span><span class="p">)</span>
	<span class="k">WHERE</span> <span class="n">orderNumber</span> <span class="o">=</span> <span class="k">NEW</span><span class="p">.</span><span class="n">orderNumber</span>
	<span class="k">ORDER</span> <span class="k">BY</span> 
		<span class="n">orderNumber</span><span class="p">,</span> 
		<span class="n">orderLineNumber</span><span class="p">;</span>
        
<span class="k">END</span> <span class="err">$$</span>

<span class="k">DELIMITER</span> <span class="p">;</span>
</code></pre></div></div>

<p><br /></p>

<p><code class="language-plaintext highlighter-rouge">E</code> - Extract: Joining the tables for the operational layer is an extract operation</p>

<p><code class="language-plaintext highlighter-rouge">T</code> - Transform: We don’t have glamorous transformations here, only a WeekOfYear covering this part. Nevertheless, please note that you call a store procedure form trigger or even use procedural language to do transformation in the trigger itself.</p>

<p><code class="language-plaintext highlighter-rouge">L</code> - Load: Inserting into product_sales represents the load part of the ETL</p>

<p><br /><br /></p>
<h4 id="activating-the-trigger">Activating the trigger</h4>

<p>Listing the current state of the product_sales. Please note that, there is no orderNumber 16.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">product_sales</span> <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">SalesId</span><span class="p">;</span>
</code></pre></div></div>

<p>Now will activate the trigger by inserting into orderdetails:</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">INSERT</span> <span class="k">INTO</span> <span class="n">orders</span>  <span class="k">VALUES</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span><span class="s1">'2020-10-01'</span><span class="p">,</span><span class="s1">'2020-10-01'</span><span class="p">,</span><span class="s1">'2020-10-01'</span><span class="p">,</span><span class="s1">'Done'</span><span class="p">,</span><span class="s1">''</span><span class="p">,</span><span class="mi">131</span><span class="p">);</span>
<span class="k">INSERT</span> <span class="k">INTO</span> <span class="n">orderdetails</span>  <span class="k">VALUES</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span><span class="s1">'S18_1749'</span><span class="p">,</span><span class="s1">'1'</span><span class="p">,</span><span class="s1">'10'</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
</code></pre></div></div>

<p>Check product_sales again, you should have orderNumber 16:</p>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">product_sales</span> <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">SalesId</span><span class="p">;</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">Note</code> Triggers are not the only way to initiate an ETL process. In fact for performance reasons, it is advised to use the Event engine on large data sets. For more information check: https://www.mysqltutorial.org/mysql-triggers/working-mysql-scheduled-event/</p>

<p><br /><br /><br />
<a name="datamart"></a></p>
<h1 id="data-marts-with-views">Data marts with Views</h1>

<p>With views we can define sections of the datastore and prepare them for a BI operation such as reporting.</p>

<p>View of sales for a specific brand (Vintage_Cars)</p>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">DROP</span> <span class="k">VIEW</span> <span class="n">IF</span> <span class="k">EXISTS</span> <span class="n">Vintage_Cars</span><span class="p">;</span>

<span class="k">CREATE</span> <span class="k">VIEW</span> <span class="nv">`Vintage_Cars`</span> <span class="k">AS</span>
<span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">product_sales</span> <span class="k">WHERE</span> <span class="n">product_sales</span><span class="p">.</span><span class="n">Brand</span> <span class="o">=</span> <span class="s1">'Vintage Cars'</span><span class="p">;</span>
</code></pre></div></div>

<p>View of sales in USA:</p>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">DROP</span> <span class="k">VIEW</span> <span class="n">IF</span> <span class="k">EXISTS</span> <span class="n">USA</span><span class="p">;</span>

<span class="k">CREATE</span> <span class="k">VIEW</span> <span class="nv">`USA`</span> <span class="k">AS</span>
<span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">product_sales</span> <span class="k">WHERE</span> <span class="n">country</span> <span class="o">=</span> <span class="s1">'USA'</span><span class="p">;</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">Note</code> the content of Views are generated on-the-fly. For performance reasons, in analytics, so called materialized views are preferred on large data set. This is not supported by MySQL, but there are several ways to implemented. Here is an example: https://fromdual.com/mysql-materialized-views</p>

<p><br /><br /></p>

<blockquote class="challenge">
  <h2 id="exercise2"><code class="language-plaintext highlighter-rouge">Exercise2</code></h2>
  <p>Create a view, which contains product_sales rows of 2003 and 2005.</p>
</blockquote>

:ET