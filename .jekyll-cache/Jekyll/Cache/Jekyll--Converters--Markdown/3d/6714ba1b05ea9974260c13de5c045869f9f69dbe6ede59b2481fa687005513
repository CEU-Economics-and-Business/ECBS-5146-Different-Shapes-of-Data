I"âq<blockquote class="discussion">
  <h2 id="table-of-content">Table of Content</h2>
  <p><a href="https://github.com/salacika/DE2DSD/blob/main/nosql/nosql.pptx">Lecture</a></p>

  <p><a href="#redis">Redis</a></p>

  <p><a href="#mongo">MongoDB</a></p>

  <p><a href="#solr">Solr</a></p>

  <p><a href="#neo4j">Neo4j</a></p>
</blockquote>

<p><br /><br />
<a name="redis"></a></p>
<h2 id="redis">Redis</h2>

<h4 id="links-to-help-you">Links to help you</h4>
<p><a href="https://redis-py.readthedocs.io/en/stable/index.html">https://redis-py.readthedocs.io/en/stable/index.html</a></p>

<p><a href="https://redis.io/commands#">https://redis.io/commands#</a></p>

<p><br /></p>

<h4 id="exercise-interface-httpdeceudatanet-apache-zeppelin">Exercise interface: <a href="http://de.ceudata.net">http://de.ceudata.net</a> (Apache Zeppelin)</h4>

<p>Username/Password will be distributed during class. Ask on Slack if you haven‚Äôt got one.</p>

<p><br /><br /></p>

<h4 id="connect-to-redis-with-python-use-zeppelin-notebook-with-python-interpreter">Connect to Redis with Python (Use Zeppelin notebook with Python interpreter)</h4>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">redis</span>
<span class="n">r</span> <span class="o">=</span> <span class="n">redis</span><span class="p">.</span><span class="n">Redis</span><span class="p">(</span><span class="n">host</span><span class="o">=</span><span class="s">'something'</span><span class="p">,</span> <span class="n">port</span><span class="o">=</span><span class="n">something</span><span class="p">)</span>
</code></pre></div></div>

<h4 id="set-a-value-with-a-key">Set a value with a key</h4>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">r</span><span class="p">.</span><span class="nb">set</span><span class="p">(</span><span class="s">'foo'</span><span class="p">,</span> <span class="s">'bar'</span><span class="p">)</span>
</code></pre></div></div>

<h4 id="get-value-by-key">Get value by key</h4>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">r</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'foo'</span><span class="p">)</span>
</code></pre></div></div>

<h4 id="overwrite-with-expiration">Overwrite with expiration</h4>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">r</span><span class="p">.</span><span class="nb">set</span><span class="p">(</span><span class="s">'foo'</span><span class="p">,</span><span class="s">'bar2'</span><span class="p">,</span><span class="n">ex</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>
</code></pre></div></div>

<h4 id="is-it-there">Is it there?</h4>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">r</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'foo'</span><span class="p">)</span>
</code></pre></div></div>

<h4 id="set-a-number">Set a number</h4>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">r</span><span class="p">.</span><span class="nb">set</span><span class="p">(</span><span class="s">"something"</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
<span class="n">r</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'something'</span><span class="p">)</span>
</code></pre></div></div>

<h4 id="increase-number-value">Increase number value</h4>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">r</span><span class="p">.</span><span class="n">incr</span><span class="p">(</span><span class="s">"something"</span><span class="p">)</span>
<span class="n">r</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'something'</span><span class="p">)</span>
</code></pre></div></div>

<h4 id="store-multiple-key-value">Store multiple key-value</h4>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">r</span><span class="p">.</span><span class="n">mset</span><span class="p">({</span><span class="s">'one'</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">'two'</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s">'three'</span><span class="p">:</span> <span class="mi">3</span><span class="p">})</span>
</code></pre></div></div>

<h4 id="display-all-keys-stored-in-db">Display all keys stored in DB</h4>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">r</span><span class="p">.</span><span class="n">keys</span><span class="p">()</span>
</code></pre></div></div>

<h4 id="retrieve-multiple-values-by-key">Retrieve multiple values by key</h4>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">r</span><span class="p">.</span><span class="n">mget</span><span class="p">(</span><span class="s">'one'</span><span class="p">,</span><span class="s">'three'</span><span class="p">)</span>
</code></pre></div></div>

<blockquote class="challenge">
  <h2 id="redis-exercise">REDIS Exercise</h2>
  <p>USING THE DOCUMENTATION, FIND HOW TO DELETE A VALUE BY KEY AND HOW TO CHECK THE EXISTENCE OF A KEY.</p>
</blockquote>

<p><br /><br /><br />
<a name="mongo"></a></p>
<h2 id="mongodb">MongoDB</h2>

<h4 id="links-to-help-you-1">Links to help you</h4>

<p><a href="https://docs.mongodb.com/manual/">https://docs.mongodb.com/manual/</a></p>

<p><a href="https://www.w3schools.com/python/python_mongodb_getstarted.asp">https://www.w3schools.com/python/python_mongodb_getstarted.asp</a></p>

<p><a href="https://docs.atlas.mongodb.com/sample-data/sample-airbnb/">AirBnb dataset</a></p>

<p><br /></p>

<h4 id="exercise-interface-httpceudsdnet-apache-zeppelin">Exercise interface: <a href="http://ceudsd.net">http://ceudsd.net</a> (Apache Zeppelin)</h4>

<p>Username/Password will be distributed during class. Ask on Slack if you haven‚Äôt got one. 
<br /><br /></p>

<p><br /></p>

<h4 id="connect-to-mongodb-with-python-use-zeppelin-notebook-with-python-interpreter">Connect to MongoDB with Python (Use Zeppelin notebook with Python interpreter)</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">pymongo</span>
<span class="kn">import</span> <span class="nn">pprint</span>
<span class="n">mongo</span> <span class="o">=</span> <span class="n">pymongo</span><span class="p">.</span><span class="n">MongoClient</span><span class="p">(</span><span class="s">"mongodb://something:something"</span><span class="p">)</span>
</code></pre></div></div>

<p><br /></p>
<h4 id="select-a-database-and-a-collection">Select a database and a collection</h4>

<p>If database or collection does not exist, will be created with the first data write (eg. insert line)</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">db</span> <span class="o">=</span> <span class="n">mongo</span><span class="p">[</span><span class="s">"mydatabase"</span><span class="p">]</span>
<span class="n">customers</span> <span class="o">=</span> <span class="n">db</span><span class="p">[</span><span class="s">"customers"</span><span class="p">]</span>
</code></pre></div></div>

<p><br /></p>
<h4 id="list-collections-stored-in-the-database">List collections stored in the database</h4>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">db</span><span class="p">.</span><span class="n">list_collection_names</span><span class="p">()</span>
</code></pre></div></div>

<p><br /></p>
<h4 id="insert-a-document">Insert a document</h4>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">id</span> <span class="o">=</span> <span class="n">customers</span><span class="p">.</span><span class="n">insert_one</span><span class="p">({</span> <span class="s">"name"</span><span class="p">:</span> <span class="s">"John"</span><span class="p">,</span> <span class="s">"address"</span><span class="p">:</span> <span class="s">"Boston Highway 37"</span> <span class="p">}).</span><span class="n">inserted_id</span>
</code></pre></div></div>

<p><br /></p>
<h4 id="find">Find</h4>

<p>Find the customer inserted by id. Pretty print the result.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pprint</span><span class="p">.</span><span class="n">pprint</span><span class="p">(</span><span class="n">customers</span><span class="p">.</span><span class="n">find_one</span><span class="p">({</span><span class="s">"_id"</span><span class="p">:</span> <span class="nb">id</span><span class="p">}))</span>
</code></pre></div></div>

<p>Find multiple customers by ‚Äúname‚Äù field. Inverse sort by ‚Äúaddress‚Äù. Limit to 5. In order to print the result we iterating over the result set and pretty print each resulting JSON.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">customer</span> <span class="ow">in</span> <span class="n">customers</span><span class="p">.</span><span class="n">find</span><span class="p">({</span><span class="s">"name"</span><span class="p">:</span> <span class="s">"John"</span><span class="p">}).</span><span class="n">sort</span><span class="p">(</span><span class="s">"address"</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">).</span><span class="n">limit</span><span class="p">(</span><span class="mi">5</span><span class="p">):</span>
    <span class="n">pprint</span><span class="p">.</span><span class="n">pprint</span><span class="p">(</span><span class="n">customer</span><span class="p">)</span>
</code></pre></div></div>

<p><br /></p>
<h4 id="count">Count</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">customers</span><span class="p">.</span><span class="n">count_documents</span><span class="p">({</span><span class="s">"name"</span><span class="p">:</span> <span class="s">"John"</span><span class="p">})</span>
</code></pre></div></div>

<p><br /></p>
<h4 id="distinct">Distinct</h4>

<p>Find the customers called ‚ÄúJohn‚Äù which address starts with ‚ÄúBoston‚Äù and print out distinct addresses.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">customer</span> <span class="ow">in</span> <span class="n">customers</span><span class="p">.</span><span class="n">find</span><span class="p">({</span><span class="s">"name"</span><span class="p">:</span><span class="s">"John"</span><span class="p">,</span><span class="s">"address"</span><span class="p">:</span> <span class="p">{</span><span class="s">"$regex"</span><span class="p">:</span> <span class="s">"^Boston"</span><span class="p">}}).</span><span class="n">distinct</span><span class="p">(</span><span class="s">"address"</span><span class="p">):</span>
    <span class="n">pprint</span><span class="p">.</span><span class="n">pprint</span><span class="p">(</span><span class="n">customer</span><span class="p">)</span>
</code></pre></div></div>

<p><br /></p>
<h4 id="airbnb-sample-database">Airbnb Sample database</h4>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">airbnb</span> <span class="o">=</span> <span class="n">db</span><span class="p">[</span><span class="s">"airbnb"</span><span class="p">]</span>
<span class="n">pprint</span><span class="p">.</span><span class="n">pprint</span><span class="p">(</span><span class="n">airbnb</span><span class="p">.</span><span class="n">find_one</span><span class="p">())</span>
</code></pre></div></div>

<p><br /></p>
<h4 id="advance-filtering">Advance filtering</h4>

<p>Filter by a deeper JSON field. Print only part of JSON.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">listing</span> <span class="ow">in</span> <span class="n">airbnb</span><span class="p">.</span><span class="n">find</span><span class="p">({</span> <span class="s">"address.country"</span><span class="p">:</span> <span class="s">"Spain"</span> <span class="p">}).</span><span class="n">limit</span><span class="p">(</span><span class="mi">10</span><span class="p">):</span>
    <span class="n">pprint</span><span class="p">.</span><span class="n">pprint</span><span class="p">(</span><span class="n">listing</span><span class="p">[</span><span class="s">'address'</span><span class="p">][</span><span class="s">'government_area'</span><span class="p">])</span>
</code></pre></div></div>

<blockquote class="challenge">
  <h2 id="mongo-exercise">MONGO Exercise</h2>
  <p>COUNT HOW MANY AIRBNB LISTINGS WE HAVE IN THE SAMPLE DATABASE HAVING ‚ÄúCOUNTRY_CODE‚Äù ‚ÄúUS‚Äù OR ‚ÄúADDRESS.MARKET‚Äù STARTWITH ‚ÄúM‚Äù (USE MONGODB DOCUMENTATION)</p>
  <blockquote class="solution">
    <h2 id="solution">Solution</h2>
    <p>Just a hint, the solution in SQL is something like:</p>
    <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="k">COUNT</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="k">FROM</span> <span class="n">airbnb</span> <span class="k">WHERE</span> <span class="n">country_code</span><span class="o">=</span><span class="s1">'US'</span> <span class="k">OR</span> <span class="n">market</span> <span class="k">LIKE</span> <span class="s1">'M%'</span>
</code></pre></div>    </div>
  </blockquote>
</blockquote>

<p><br /><br /><br />
<a name="solr"></a></p>
<h2 id="solr">Solr</h2>

<h4 id="links-to-help-you-2">Links to help you</h4>
<p><a href="https://cwiki.apache.org/confluence/display/solr/The+Standard+Query+Parser">https://cwiki.apache.org/confluence/display/solr/The+Standard+Query+Parser</a></p>

<p><a href="http://yonik.com/solr/query-syntax/">http://yonik.com/solr/query-syntax/</a></p>

<p><br /></p>

<h4 id="exercise-interface-httpdeceudatanet8081solrflightdelaysquery">Exercise interface: <a href="http://de.ceudata.net:8081/solr/#/flightdelays/query">http://de.ceudata.net:8081/solr/#/flightdelays/query</a></h4>

<p><br /><br /></p>

<h4 id="a-simple-query">A simple query</h4>

<p>SOLR has different connectors to programming languages. For simple query testing, we don‚Äôt need to program because SOLR is offering so called HTTP Rest interface. These are basically url calls from a browser.</p>

<p>The simplest query (the result is limited by default to 10):</p>
<div class="language-plaintext output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://de.ceudata.net:8081/solr/flightdelays/select?q=*:*
</code></pre></div></div>

<p><br />
In SQL, this would be something like:</p>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">flightdelays</span> <span class="k">LIMIT</span> <span class="mi">10</span><span class="p">;</span>
</code></pre></div></div>

<p><br /></p>
<h4 id="ranges">Ranges</h4>

<p>List records from the last 10 years where tail number is N520JB:</p>

<div class="language-plaintext output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://de.ceudata.net:8081/solr/flightdelays/select?fl=DISTANCE,ORIG_CITY,DEST_CITY&amp;q=TAIL_NUMBER:N838UA AND DATE:[NOW-10YEARS TO *]&amp;sort=DISTANCE desc&amp;rows=5
</code></pre></div></div>

<p><br />
In SQL, this would be something like:</p>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="n">distance</span><span class="p">,</span><span class="n">orig_city</span><span class="p">,</span><span class="n">dest_city</span> <span class="k">FROM</span> <span class="n">flightdelays</span> 
  <span class="k">WHERE</span> <span class="n">tail_number</span><span class="o">=</span><span class="s1">'N520JB'</span> <span class="k">AND</span> <span class="nb">date</span> <span class="o">&gt;=</span> <span class="n">DATE_SUB</span><span class="p">(</span><span class="n">NOW</span><span class="p">(),</span><span class="n">INTERVAL</span> <span class="mi">10</span> <span class="nb">YEAR</span><span class="p">)</span> 
  <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">distance</span> <span class="k">DESC</span> 
  <span class="k">LIMIT</span> <span class="mi">5</span><span class="p">;</span>
</code></pre></div></div>

<p><br /><br /></p>
<h4 id="string-search--fuzzy-search">String search / Fuzzy search</h4>
<p>List records where tail numbers starting with any character, followed by ‚Äú2‚Äù, followed by 2 any character, followed by ‚Äújb‚Äù. Display only tail number in the result set:</p>
<div class="language-plaintext output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://de.ceudata.net:8081/solr/flightdelays/select?fl=TAIL_NUMBER&amp;q=TAIL_NUMBER:?8???a
</code></pre></div></div>

<p>Fuzzy searches is based on the Damerau-Levenshtein Distance or Edit Distance algorithm. Fuzzy searches discover terms that are similar to a specified term without necessarily being an exact match. To perform a fuzzy search, use the tilde ~ symbol at the end of a single-word term</p>

<p>In the next example we list records with destination city close to ‚Äúcolumbas‚Äù by distance of 2. The distance referred to here is the number of term movements needed to match the specified phrase.</p>
<div class="language-plaintext output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://de.ceudata.net:8081/solr/flightdelays/select?fl=DEST_CITY&amp;q=DEST_CITY:kolumbas~2
</code></pre></div></div>

<p><br /></p>
<h4 id="facets">Facets</h4>

<p>Same as before, but this time return back distinct destination cities as well:</p>
<div class="language-plaintext output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://de.ceudata.net:8081/solr/flightdelays/select?q=DEST_CITY:Boise~3&amp;facet.field=DEST_CITY_str&amp;facet=on&amp;rows=0
</code></pre></div></div>

<p><br />
This previous result sounds like a combined result of the following SQLs:</p>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">flightdelays</span> <span class="k">WHERE</span> <span class="n">DEST_CITY</span> <span class="k">LIKE</span> <span class="s1">'columbas%'</span> <span class="k">LIMIT</span> <span class="mi">10</span><span class="p">;</span>

<span class="k">SELECT</span> <span class="n">dest_city</span><span class="p">,</span> <span class="k">COUNT</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="k">FROM</span> <span class="n">flightdelays</span> 
  <span class="k">WHERE</span> <span class="n">DEST_CITY</span> <span class="k">LIKE</span> <span class="s1">'columbas%'</span> 
  <span class="k">GROUP</span> <span class="k">BY</span> <span class="n">dest_city</span><span class="p">;</span>
</code></pre></div></div>

<p><br /></p>
<h4 id="geo-spacial-search">Geo spacial search</h4>

<p>Return back records within a circle defined by center point of 39.85,-104.66 [lat,lon] and diameter of 2 kilometer. Display only ORIG_CITY and ORIG_LOCATION_p in the result set and facests for ORIG_CITY_str.</p>

<div class="language-plaintext output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://de.ceudata.net:8081/solr/flightdelays/select?d=2&amp;facet.field=ORIG_CITY_str&amp;facet=on&amp;fl=ORIG_CITY,ORIG_LOCATION_p,&amp;fq={!geofilt}&amp;pt=39.85,-104.66&amp;q=*:*&amp;sfield=ORIG_LOCATION_p
</code></pre></div></div>

<blockquote class="challenge">
  <h2 id="solr-exercise">SOLR Exercise</h2>
  <p>HOW MANY FLIGHTS ARRIVED IN SAN FRANCISCO WITH NO DELAY ALTHOUGH THEY DEPARTED AT LEAST 50 MINS BEHIND THE SCHEDULE?</p>
</blockquote>

<p><br /><br /><br />
<a name="neo4j"></a></p>
<h2 id="neo4j">Neo4j</h2>

<h4 id="links-to-help-you-3">Links to help you</h4>

<p>(https://neo4j.com/developer/cypher-query-language/)</p>

<p>(http://neo4j.com/docs/developer-manual/current/cypher/)</p>

<p>(https://cloudfront-files-1.publicintegrity.org/offshoreleaks/neo4j/guide/index.html)</p>

<p><br /></p>
<h4 id="exercise-interface-httpssandboxneo4jcom">Exercise interface: <a href="https://sandbox.neo4j.com/">https://sandbox.neo4j.com/</a></h4>

<p>Register and start a sandbox with ‚ÄúPanama Papers by ICIJ‚Äù</p>

<p><br /><br /></p>

<h4 id="simple-queries">Simple queries</h4>

<p>In Neo4J the SELECT is called MATCH. One of the simplest query is selecting 25 Officer nodes :</p>

<div class="language-cypher highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">MATCH</span><span class="w"> </span><span class="ss">(</span><span class="py">n:</span><span class="n">Entity</span><span class="ss">)</span> 
<span class="k">RETURN</span> <span class="n">n.name</span> <span class="k">LIMIT</span> <span class="mi">25</span>

</code></pre></div></div>

<p><br />
In SQL, this would be something like:</p>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="n">n</span><span class="p">.</span><span class="n">name</span> <span class="k">FROM</span> <span class="n">Officer</span> <span class="k">AS</span> <span class="n">n</span> <span class="k">LIMIT</span> <span class="mi">25</span><span class="p">;</span>
</code></pre></div></div>

<p>We can use WHERE clause to filter our result:</p>
<div class="language-cypher highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">MATCH</span><span class="w"> </span><span class="ss">(</span><span class="py">o:</span><span class="n">Officer</span><span class="ss">)</span>
<span class="k">WHERE</span> <span class="n">o.countries</span> <span class="ow">CONTAINS</span> <span class="s1">'Hungary'</span>
<span class="k">RETURN</span> <span class="n">o</span>
</code></pre></div></div>

<p><br />
In SQL, this would be something like:</p>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="n">o</span><span class="p">.</span><span class="n">countries</span> <span class="k">FROM</span> <span class="n">officer</span> <span class="k">AS</span> <span class="n">o</span> <span class="k">WHERE</span> <span class="n">o</span><span class="p">.</span><span class="n">countries</span> <span class="k">LIKE</span> <span class="s1">'%Hungary%'</span><span class="p">;</span>
</code></pre></div></div>

<blockquote class="challenge">
  <h2 id="neo4j-exercise-1">NEO4J Exercise 1</h2>
  <p>RETURN THE FIRST 10 ADDRESS NODES</p>
</blockquote>

<blockquote class="challenge">
  <h2 id="neo4j-exercise-2">NEO4J Exercise 2</h2>
  <p>HOW MANY PROPERTIES AN ADDRESS NODE HAS?</p>
</blockquote>

<blockquote class="challenge">
  <h2 id="neo4j-exercise-3">NEO4J Exercise 3</h2>
  <p>RETURN THE FIRST 10 COUNTRIES OF THE ADDRESS NODE. WHAT IS THE LAST COUNTRY IN THE LIST?</p>
</blockquote>

<blockquote class="challenge">
  <h2 id="neo4j-exercise4">NEO4J Exercise4</h2>
  <p>HOW MANY ADDRESS NODES HAS ‚ÄòMexico‚Äô AND ‚ÄòMonaco‚Äô IN THEIR ADDRESS PROPERTY?</p>
</blockquote>

<p><br /></p>
<h4 id="joins">Joins</h4>

<p>Find the Officers and the Entities linked to them (double MATCH)</p>

<div class="language-cypher highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">MATCH</span><span class="w"> </span><span class="ss">(</span><span class="py">o:</span><span class="n">Officer</span><span class="ss">)</span> 
<span class="k">MATCH</span><span class="w"> </span><span class="ss">(</span><span class="n">o</span><span class="ss">)</span><span class="o">-</span><span class="ss">[</span><span class="n">r</span><span class="ss">]</span><span class="o">-</span><span class="ss">(</span><span class="py">c:</span><span class="n">Entity</span><span class="ss">)</span>
<span class="k">RETURN</span> <span class="n">o</span><span class="ss">,</span><span class="n">r</span><span class="ss">,</span><span class="n">c</span>
<span class="k">LIMIT</span> <span class="mi">50</span>
</code></pre></div></div>

<p><br />
In SQL, this would be something like:</p>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="o">*</span> 
<span class="k">FROM</span> <span class="n">officer</span> <span class="k">as</span> <span class="n">o</span>  
<span class="k">INNER</span> <span class="k">JOIN</span> <span class="n">Entity</span> <span class="k">as</span> <span class="k">c</span> 
<span class="k">USING</span> <span class="p">(</span><span class="n">relationship</span><span class="p">)</span>
</code></pre></div></div>

<p>Find the Officers called ‚Äúaliyev‚Äù and Entities related to them:</p>
<div class="language-cypher highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">MATCH</span><span class="w"> </span><span class="ss">(</span><span class="py">o:</span><span class="n">Officer</span><span class="ss">)</span> 
<span class="k">WHERE</span> <span class="n">toLower</span><span class="ss">(</span><span class="n">o.name</span><span class="ss">)</span> <span class="ow">CONTAINS</span> <span class="s2">"aliyev"</span>
<span class="k">MATCH</span><span class="w"> </span><span class="ss">(</span><span class="n">o</span><span class="ss">)</span><span class="o">-</span><span class="ss">[</span><span class="n">r</span><span class="ss">]</span><span class="o">-</span><span class="ss">(</span><span class="py">c:</span><span class="n">Entity</span><span class="ss">)</span>
<span class="k">RETURN</span> <span class="n">o</span><span class="ss">,</span><span class="n">r</span><span class="ss">,</span><span class="n">c</span>
</code></pre></div></div>

<p>Same, but this time return only ‚ÄúDIRECTOR_OF‚Äù relations:</p>
<div class="language-cypher highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">MATCH</span><span class="w"> </span><span class="ss">(</span><span class="py">o:</span><span class="n">Officer</span><span class="ss">)</span> 
<span class="k">WHERE</span> <span class="n">toLower</span><span class="ss">(</span><span class="n">o.name</span><span class="ss">)</span> <span class="ow">CONTAINS</span> <span class="s2">"aliyev"</span>
<span class="k">MATCH</span><span class="w"> </span><span class="ss">(</span><span class="n">o</span><span class="ss">)</span><span class="o">-</span><span class="ss">[</span><span class="py">r:</span><span class="n">DIRECTOR_OF</span><span class="ss">]</span><span class="o">-</span><span class="ss">(</span><span class="py">c:</span><span class="n">Entity</span><span class="ss">)</span>
<span class="k">RETURN</span> <span class="n">o</span><span class="ss">,</span><span class="n">r</span><span class="ss">,</span><span class="n">c</span>
</code></pre></div></div>

<p><br /></p>

<h4 id="count-1">Count</h4>

<p>Which country has the most addresses</p>
<div class="language-cypher highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">MATCH</span><span class="w"> </span><span class="ss">(</span><span class="py">n:</span><span class="n">Address</span><span class="ss">)</span> 
<span class="k">RETURN</span> <span class="n">n.countries</span><span class="ss">,</span> <span class="nf">count</span><span class="ss">(</span><span class="o">*</span><span class="ss">)</span>
<span class="k">ORDER</span> <span class="k">BY</span> <span class="nf">count</span><span class="ss">(</span><span class="o">*</span><span class="ss">)</span> <span class="k">DESC</span>
<span class="k">LIMIT</span> <span class="mi">10</span>
</code></pre></div></div>

<blockquote class="challenge">
  <h2 id="neo4j-exercise-5">NEO4J Exercise 5</h2>
  <p>LIST THE NAME AND NUMBER CONNECTIONS OF THE TOP 10 MOST CONNECTED OFFICERS FROM BULGARIA.WHO IS THE NO1?</p>
</blockquote>

:ET